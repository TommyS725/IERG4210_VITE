/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as OrderSuccessImport } from './routes/order-success'
import { Route as OrderErrorImport } from './routes/order-error'
import { Route as OrderCanceledImport } from './routes/order-canceled'
import { Route as NotFoundImport } from './routes/notFound'
import { Route as LoginImport } from './routes/login'
import { Route as withListImport } from './routes/__withList'
import { Route as protectedImport } from './routes/__protected'
import { Route as withListIndexImport } from './routes/__withList/index'
import { Route as protectedMyOrdersImport } from './routes/__protected/my-orders'
import { Route as protectedChangePasswordImport } from './routes/__protected/change-password'
import { Route as withListProductsPidImport } from './routes/__withList/products.$pid'

// Create/Update Routes

const OrderSuccessRoute = OrderSuccessImport.update({
  path: '/order-success',
  getParentRoute: () => rootRoute,
} as any)

const OrderErrorRoute = OrderErrorImport.update({
  path: '/order-error',
  getParentRoute: () => rootRoute,
} as any)

const OrderCanceledRoute = OrderCanceledImport.update({
  path: '/order-canceled',
  getParentRoute: () => rootRoute,
} as any)

const NotFoundRoute = NotFoundImport.update({
  path: '/notFound',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const withListRoute = withListImport.update({
  id: '/__withList',
  getParentRoute: () => rootRoute,
} as any)

const protectedRoute = protectedImport.update({
  id: '/__protected',
  getParentRoute: () => rootRoute,
} as any)

const withListIndexRoute = withListIndexImport.update({
  path: '/',
  getParentRoute: () => withListRoute,
} as any)

const protectedMyOrdersRoute = protectedMyOrdersImport.update({
  path: '/my-orders',
  getParentRoute: () => protectedRoute,
} as any)

const protectedChangePasswordRoute = protectedChangePasswordImport.update({
  path: '/change-password',
  getParentRoute: () => protectedRoute,
} as any)

const withListProductsPidRoute = withListProductsPidImport.update({
  path: '/products/$pid',
  getParentRoute: () => withListRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/__protected': {
      preLoaderRoute: typeof protectedImport
      parentRoute: typeof rootRoute
    }
    '/__withList': {
      preLoaderRoute: typeof withListImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/notFound': {
      preLoaderRoute: typeof NotFoundImport
      parentRoute: typeof rootRoute
    }
    '/order-canceled': {
      preLoaderRoute: typeof OrderCanceledImport
      parentRoute: typeof rootRoute
    }
    '/order-error': {
      preLoaderRoute: typeof OrderErrorImport
      parentRoute: typeof rootRoute
    }
    '/order-success': {
      preLoaderRoute: typeof OrderSuccessImport
      parentRoute: typeof rootRoute
    }
    '/__protected/change-password': {
      preLoaderRoute: typeof protectedChangePasswordImport
      parentRoute: typeof protectedImport
    }
    '/__protected/my-orders': {
      preLoaderRoute: typeof protectedMyOrdersImport
      parentRoute: typeof protectedImport
    }
    '/__withList/': {
      preLoaderRoute: typeof withListIndexImport
      parentRoute: typeof withListImport
    }
    '/__withList/products/$pid': {
      preLoaderRoute: typeof withListProductsPidImport
      parentRoute: typeof withListImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  protectedRoute.addChildren([
    protectedChangePasswordRoute,
    protectedMyOrdersRoute,
  ]),
  withListRoute.addChildren([withListIndexRoute, withListProductsPidRoute]),
  LoginRoute,
  NotFoundRoute,
  OrderCanceledRoute,
  OrderErrorRoute,
  OrderSuccessRoute,
])

/* prettier-ignore-end */
